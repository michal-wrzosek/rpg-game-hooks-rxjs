{"version":3,"sources":["observables/AnimationFrame.ts","observables/KeysPressed.ts","observables/Player.ts","containers/Canvas/Canvas.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["prevFrameTime","KEYS","KEY_EVENT_TYPES","isRunning","AnimationFrame","of","animationFrameScheduler","pipe","repeat","map","Date","currentFrameTime","timeFromPrevFrame","createPlayer","initialProps","state","xV","yV","slowDownRate","maxV","acc","Player","BehaviorSubject","subscribe","_Player$getValue","getValue","x","y","newX","newY","xVSlowDown","yVSlowDown","next","recalculate","moveUp","Math","max","moveDown","min","moveRight","moveLeft","callback","keyUps","fromEvent","document","filter","event","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","ARROW_LEFT","includes","key","type","UP","keysPressed","DOWN","merge","scan","console","log","concat","Object","toConsumableArray","CanvasStyled","styled","canvas","_templateObject","Canvas","ref","React","useRef","useEffect","current","player","keys","ctx","getContext","_ref","clearRect","width","height","fillRect","react_default","a","createElement","HintText","div","App_templateObject","Wrapper","_templateObject2","App","Canvas_Canvas","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e41541d9.chunk.js","sourcesContent":["import { of, animationFrameScheduler } from 'rxjs';\nimport { repeat, map } from 'rxjs/operators';\n\nlet isRunning = false;\nlet prevFrameTime: number;\nexport const AnimationFrame = of(0, animationFrameScheduler).pipe(\n  repeat(),\n  map(() => {\n\n    // Set first frame time\n    if (!isRunning) {\n      prevFrameTime = +new Date();\n      isRunning = true;\n    }\n\n    const currentFrameTime = +new Date();\n    const timeFromPrevFrame = currentFrameTime - prevFrameTime;\n    prevFrameTime = currentFrameTime;\n\n    return timeFromPrevFrame;\n  }),\n)\n","import { fromEvent } from 'rxjs';\nimport { map, filter, merge, scan } from 'rxjs/operators';\n\nexport enum KEYS {\n  ARROW_UP = 'ArrowUp',\n  ARROW_RIGHT = 'ArrowRight',\n  ARROW_DOWN = 'ArrowDown',\n  ARROW_LEFT = 'ArrowLeft'\n}\n\nexport enum KEY_EVENT_TYPES {\n  DOWN = 'down',\n  UP = 'up',\n}\n\nexport type KeyEventType = {\n  type: KEY_EVENT_TYPES,\n  key: KEYS\n}\n\nexport type KeyPressedType = KEYS[];\n\nconst keyUps = fromEvent<KeyboardEvent>(document, \"keyup\").pipe(\n  filter(\n    (event) => [\n      KEYS.ARROW_UP,\n      KEYS.ARROW_RIGHT,\n      KEYS.ARROW_DOWN,\n      KEYS.ARROW_LEFT,\n    ].includes(event.key as any)\n  ),\n  map((event) => ({ type: KEY_EVENT_TYPES.UP, key: event.key as KEYS })),\n)\nconst keyDowns = fromEvent<KeyboardEvent>(document, \"keydown\").pipe(\n  filter(\n    (event) => [\n      KEYS.ARROW_UP,\n      KEYS.ARROW_RIGHT,\n      KEYS.ARROW_DOWN,\n      KEYS.ARROW_LEFT,\n    ].includes(event.key as any)\n  ),\n  map((event) => ({ type: KEY_EVENT_TYPES.DOWN, key: event.key as KEYS })),\n)\n\nexport const keysPressed = keyDowns.pipe(\n  merge(keyUps),\n  scan((acc: KeyPressedType, event: KeyEventType) => {\n    if (event.type === KEY_EVENT_TYPES.DOWN && !acc.includes(event.key)) {\n      return [...acc, event.key];\n    } else if (event.type === KEY_EVENT_TYPES.UP) {\n      console.log(event);\n      return acc.filter(key => key !== event.key);\n    } else {\n      return acc;\n    }\n  }, [])\n)","import { BehaviorSubject } from 'rxjs';\nimport { AnimationFrame } from './AnimationFrame';\n\nexport type PlayerProps = {\n  x: number;\n  y: number;\n}\n\nexport type PlayerState = {\n  xV: number;\n  yV: number;\n  slowDownRate: number;\n  maxV: number;\n  acc: number;\n}\n\nexport const createPlayer = (initialProps: PlayerProps) => {\n  const state: PlayerState = {\n    xV: 0,\n    yV: 0,\n    slowDownRate: 150, // pixels per 1sec\n    maxV: 150,\n    acc: 40,\n  }\n\n  const Player = new BehaviorSubject<PlayerProps>(initialProps);\n\n  function recalculate(timeFromPrevFrame: number) {\n    const { x, y } = Player.getValue();\n\n    // Calculating new X position\n    const newX = x + (state.xV * timeFromPrevFrame / 1000);\n    \n    // Calculating new Y position\n    const newY = y + (state.yV * timeFromPrevFrame / 1000);\n\n    // Calculating new X Velocity\n    const xVSlowDown = state.slowDownRate * timeFromPrevFrame / 1000;\n    if (state.xV > 0) {\n      if (state.xV > xVSlowDown) {\n        state.xV = state.xV - xVSlowDown;\n      } else {\n        state.xV = 0;\n      }\n    } else if (state.xV < 0) {\n      if (state.xV * -1 > xVSlowDown) {\n        state.xV = state.xV + xVSlowDown;\n      } else {\n        state.xV = 0;\n      }\n    }\n\n    // Calculating new Y Velocity\n    const yVSlowDown = state.slowDownRate * timeFromPrevFrame / 1000;\n    if (state.yV > 0) {\n      if (state.yV > yVSlowDown) {\n        state.yV = state.yV - yVSlowDown;\n      } else {\n        state.yV = 0;\n      }\n    } else if (state.yV < 0) {\n      if (state.yV * -1 > yVSlowDown) {\n        state.yV = state.yV + yVSlowDown;\n      } else {\n        state.yV = 0;\n      }\n    }\n\n    \n    Player.next({ x: newX, y: newY });\n  }\n\n  function moveUp() {\n    state.yV = Math.max(state.yV - state.acc, state.maxV * -1);\n  }\n\n  function moveDown() {\n    state.yV = Math.min(state.yV + state.acc, state.maxV);\n  }\n\n  function moveRight() {\n    state.xV = Math.min(state.xV + state.acc, state.maxV);\n  }\n\n  function moveLeft() {\n    state.xV = Math.max(state.xV - state.acc, state.maxV * -1);\n  }\n\n  AnimationFrame.subscribe((timeFromPrevFrame) => recalculate(timeFromPrevFrame));\n\n  return {\n    moveUp,\n    moveDown,\n    moveRight,\n    moveLeft,\n    subscribe: (callback: (playerProps: PlayerProps) => void) => Player.subscribe(callback),\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { createPlayer } from 'observables/Player';\nimport { keysPressed, KEYS } from 'observables/KeysPressed';\n\nconst CanvasStyled = styled.canvas`\n  background: #eee;\n  display: block;\n  margin: 0 auto;\n`;\n\nexport const Canvas = () => {\n  const ref = React.useRef<HTMLCanvasElement>(null);\n  React.useEffect(() => {\n    if (ref.current) {\n      const player = createPlayer({ x: 10, y: 10 });\n      \n\n      keysPressed.subscribe((keys) => {\n        if (keys.includes(KEYS.ARROW_DOWN)) {\n          player.moveDown();\n        }\n\n        if (keys.includes(KEYS.ARROW_UP)) {\n          player.moveUp();\n        }\n\n        if (keys.includes(KEYS.ARROW_RIGHT)) {\n          player.moveRight();\n        }\n\n        if (keys.includes(KEYS.ARROW_LEFT)) {\n          player.moveLeft();\n        }\n      });\n\n      const canvas = ref.current;\n      const ctx = canvas.getContext(\"2d\");\n\n      if (ctx) {\n        player.subscribe(({ x, y }) => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n          ctx.fillRect(x, y, 5, 5);\n        })\n      }\n    }\n  }, []);\n\n  return (\n    <CanvasStyled ref={ref} width=\"480\" height=\"320\" />\n  )\n};\n","import React from \"react\";\nimport styled from 'styled-components';\n\nimport { Canvas } from \"containers/Canvas/Canvas\";\n\nconst HintText = styled.div`\n  text-align: center;\n  padding: 10px;\n`;\nconst Wrapper = styled.div`\n  padding: 20px;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Canvas />\n      <HintText>Use Arrow Keys to move that black dot</HintText>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}